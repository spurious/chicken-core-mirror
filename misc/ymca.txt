Description of Backend Intermediate Language


* TOP: Toplevel statements

    (begin TOP ...)

    (call EXP EXP ...)
        Perform procedure call with arguments.

    (case EXP)
        Marks "switch" case branch.

    (comment STR)
        Inline comment.

    (declare [extern|static] [noreturn] ID (TYPE VAR) ...)
        Declare extern or static function prototype.

    (declare/array [static] [aligned] TYPE ID [SIZE])
        Declare global array variable.

    (default)
        Marks default branch in a "switch" construct.

    (define [extern|static] [noreturn] ID (TYPE VAR) ...)
        ...
    (end)
        Define function.

    (define/array [static] [aligned] TYPE ID SIZE|#f EXP ...)
        Define global array variable.

    (define/variable [extern|static] TYPE ID [EXP])
        Define global non-array variable.

    (goto ID)
    (if EXP TOP TOP)
    (inline CODE)
    (label LABEL)

    (let VAR [EXP])
        Declare local variable of type "word".

    (let/proc VAR PEXP)
        Declare a local variable holding a procedure ptr ("C_proc").

    (let/ptr VAR EXP)
        Declare pointer variable (to "word").

    (let/array VAR SIZE)
        Declare array variable (of "words").

    (let/unboxed TYPE VAR [EXP])
        Declare local unboxed variable.

    (return EXP)

    (set LVALUE EXP)
        Set local or global variable or lvalue.

    (switch EXP)
    ...
    (endswitch)
        "switch" construct, see also "case" + "default".

    (tailcall FEXP EXP ...)
        Perform procedure call with arguments.

    (trace STR)
        Emit a trace item.
    
* EXP: Expressions

    (adr EXP)
        Address-of expression.

    (box AEXP EXP)
        Allocate a one-element vector from allocation ptr AEXP.

    (cast TYPE EXP)

    (closure SIZE AEXP EXP ...)
        Allocate a closure with given size from allocation ptr AEXP.
    
    (cond EXP EXP EXP)
        Conditional expression.

    (deref EXP)
        Pointer-dereferencing.

    (elt EXP IEXP)
        Extract element IEXP from array EXP.

    (inline CODE)

    (mutate EXP IEXP XEXP)
        Mutate object slot with index.

    (setslot EXP IEXP XEXP)

    (slot EXP IEXP)
        Extract slot IEXP from object EXP.

    (unlikely EXP)
        Unlikely conditional expression.

    (words EXP)
        Mutiplied by word size.

    (ID EXP ...)
        General function or macro call.

    (OP EXP ...)
        +, *, -, /, &, |, ^, ==, !, !=, <, >, <=, >=

    <VAR>
    <LITERAL>
    <FUNCTIONNAME>

* TYPE: Type specifiers

    void
    char
    uchar
    short
    ushort
    int
    uint
    long 
    ulong
    ptr
    (ptr TYPE)
    word
    float
    double
    u32
    s32
    u64
    s64
    size_t
    ssize_t
    (ref TYPE)
    (template-instance TYPE ...)
    (struct NAME)
    (union NAME)
    (enum NAME)
    (function TYPE CCONV TYPE ... ["..."])

* Intrinsics

    ...


array shapes (C_debug_info) for initializers

NOTES: 
- ptables are enabled by default
- no "return" macro for foreign stubs

#!/bin/sh
#
# Copyright (c) 2017, The CHICKEN Team
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following
# conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this list of conditions and the following
#     disclaimer. 
#   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided with the distribution. 
#   Neither the name of the author nor the names of its contributors may be used to endorse or promote
#     products derived from this software without specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


set -e

SRCDIR=`dirname $0`
PLATFORM=
CHICKEN=chicken
C_COMPILER=gcc
CXX_COMPILER=g++
ARCH=
GCHOOKS=
DEBUGBUILD=
OPTIMIZE_FOR_SPEED=
BINARYVERSION=9
STACKDIRECTION=1
CROSS_CHICKEN=
PREFIX=/usr/local
PROGRAM_PREFIX=
PROGRAM_SUFFIX=
PLATFORM=
TARGETSYSTEM=
HOSTSYSTEM=

case ${SRCDIR} in
    [!/]*) SRCDIR=${PWD}${SRCDIR};;
esac

usage() {
    echo "usage: ${SRCDIR}/configure [-help] [-prefix PREFIX] [-platform PLATFORM] [-chicken CHICKEN] [-arch ARCH] [-gchooks] [-debugbuild] [-optimize-for-speed] [-target TARGET] [-host HOST]" >&2
    echo >&2
    echo "consult ${SRCDIR}/README for more detailed information." >&2
    exit $0
}

while test -nz "$1"; do
    case "$1" in
        --?help|--?h) usage 0;;
        -prefix)
            shift
            PREFIX=$1;;
        -platform)
            shift
            if test -a "${SRCDIR}/config/$1"; then
                . ${SRCDIR}config/$1
            else
                echo "unrecognized platform: $1" >&2
                exit 1
            fi;;
        -target)
            shift
            TARGETSYSTEM=$1;;
        -host)
            shift
            HOSTSYSTEM=$1;;
        -debugbuild) DEBUGBUILD=1;;
        -gchooks) GCHOOKS=1;;
        -optimize-for-speed) OPTIMIZE_FOR_SPEED=1;;
        -*) usage 1;;
    esac
done

#XXX infer platform if not set

if test -z "${PLATFORM}"; then
    echo "no platform selected" >&2
    exit 1
fi

if test -z "${ARCH}"; then
    ARCH=`sh ${SRCDIR}/config/config-arch.sh`
fi

BINDIR=${PREFIX}/bin
LIBDIR=${PREFIX}/lib
SHAREDIR=${PREFIX}/share
DATADIR=${SHAREDIR}/${PROGRAM_PREFIX}chicken${PROGRAM_SUFFIX}
INCLUDEDIR=${PREFIX}/include
MANDIR=${SHAREDIR}/man
DOCDIR=${DATADIR}/doc
VARDIR=${LIBDIR}
MAN1DIR=${MANDIR}/man1
CHICKENLIBDIR=${VARDIR}/${PROGRAM_PREFIX}chicken${PROGRAM_SUFFIX}
EGGDIR=${CHICKENLIBDIR}/${BINARYVERSION}
CHICKENINCDIR=${INCLUDEDIR}/${PROGRAM_PREFIX}chicken${PROGRAM_SUFFIX}
CHICKEN_PROGRAM=${PROGRAM_PREFIX}chicken${PROGRAM_SUFFIX}
CSC_PROGRAM=${PROGRAM_PREFIX}csc${PROGRAM_SUFFIX}
CSI_PROGRAM=${PROGRAM_PREFIX}csi${PROGRAM_SUFFIX}
CHICKEN_PROFILE_PROGRAM=${PROGRAM_PREFIX}chicken-profile${PROGRAM_SUFFIX}
CHICKEN_INSTALL_PROGRAM=${PROGRAM_PREFIX}chicken-install${PROGRAM_SUFFIX}
CHICKEN_UNINSTALL_PROGRAM=${PROGRAM_PREFIX}chicken-uninstall${PROGRAM_SUFFIX}
CHICKEN_STATUS_PROGRAM=${PROGRAM_PREFIX}chicken-status${PROGRAM_SUFFIX}
CHICKEN_DO_PROGRAM=${PROGRAM_PREFIX}chicken-do${PROGRAM_SUFFIX}
CHICKEN_DEBUGGER_PROGRAM=${PROGRAM_PREFIX}feathers${PROGRAM_SUFFIX}
INSTALL_LIB_NAME=${PROGRAM_PREFIX}chicken${PROGRAM_SUFFIX}

if test -nz "${HOSTSYSTEM}"; then
    C_COMPILER=${HOSTSYSTEM}-gcc
    CXX_COMPILER=${HOSTSYSTEM}-g++
    LIBRARIAN=${HOSTSYSTEM}-ar
else
    C_COMPILER=gcc
    CXX_COMPILER=g++
    LIBRARIAN=ar
fi

#XXX windows: windres

LINKER=${C_COMPILER}
ASSEMBLER=${C_COMPILER}
#XXX macos:
POSTINSTALL_STATIC_LIBRARY=true
POSTINSTALL_PROGRAM=true

if test -nz "${TARGETSYSTEM}"; then
    TARGET_C_COMPILER=${TARGETSYSTEM}-${C_COMPILER}
    TARGET_CXX_COMPILER=${TARGETSYSTEM}-${CXX_COMPILER}
    TARGET_RC_COMPILER=${TARGETSYSTEM}-${RC_COMPILER}
else
    TARGET_C_COMPILER=${C_COMPILER}
    TARGET_CXX_COMPILER=${CXX_COMPILER}
    TARGET_RC_COMPILER=${RC_COMPILER}
fi

TARGET_C_COMPILER_OPTIONS=${C_COMPILER_OPTIONS}
TARGET_C_COMPILER_OPTIMIZATION_OPTIONS=${C_COMPILER_OPTIMIZATION_OPTIONS}
TARGET_PREFIX=${PREFIX}
TARGET_RUN_PREFIX=${TARGET_PREFIX}
TARGET_LIBRARIES=${LIBRARIES}
TARGET_LINKER_OPTIONS=${LINKER_OPTIONS}
TARGET_LINKER_OPTIMIZATION_OPTIONS=${LINKER_OPTIMIZATION_OPTIONS}
TARGET_FEATURES=
TARGET_LIB_NAME=chicken

if test "${TARGET_C_COMPILER}" != "${C_COMPILER}"
    CROSS_CHICKEN = 1
else
    CROSS_CHICKEN = 0
fi

rm -f config.sh
echo >config.sh <<EOF
#!/bin/sh
SRCDIR=${SRCDIR}
PLATFORM=${PLATFORM}
CHICKEN=${CHICKEN}
ARCH=${ARCH}
EOF

if test -nz "${DEBUGBUILD}"; then
    echo "#define DEBUGBUILD 1" >>chicken-config.h
fi

if testz -nz "${STATICBUILD}"; then
    echo "#define STATICBUILD 1" >>chicken-config.h
fi

if test -nz "${GCHOOKS}"; then
    echo "#define C_GC_HOOKS 1" >>chicken-config.h
fi

echo >>chicken-config.h <<EOF
#define C_CHICKEN_PROGRAM "${CHICKEN_PROGRAM}"
#define C_INSTALL_CC "${C_COMPILER}"
#define C_INSTALL_CXX "${CXX_COMPILER}"
#define C_INSTALL_POSTINSTALL_PROGRAM "${POSTINSTALL_PROGRAM}"
#define C_INSTALL_RC_COMPILER ""
#define C_INSTALL_CFLAGS "${C_COMPILER_OPTIONS} ${C_COMPILER_OPTIMIZATION_OPTIONS}"
#define C_INSTALL_LDFLAGS "${LINKER_OPTIONS} ${LINKER_OPTIMIZATION_OPTIONS}"
#define C_INSTALL_PREFIX "${PREFIX}"
#define C_INSTALL_SHARE_HOME "${DATADIR}"
#define C_INSTALL_BIN_HOME "${BINDIR}"
#define C_INSTALL_EGG_HOME "${EGGDIR}"
#define C_INSTALL_LIB_HOME "${LIBDIR}"
#define C_INSTALL_LIB_NAME "${INSTALL_LIB_NAME}"
#define C_INSTALL_STATIC_LIB_HOME "${LIBDIR}"
#define C_INSTALL_INCLUDE_HOME "${CHICKENINCDIR}"
#define C_INSTALL_MORE_LIBS "${LIBRARIES}"
#define C_INSTALL_MORE_STATIC_LIBS "${LIBRARIES}"
#define C_STACK_GROWS_DOWNWARD ${STACKDIRECTION}
#define C_TARGET_MORE_LIBS "${TARGET_LIBRARIES}"
#define C_TARGET_MORE_STATIC_LIBS "${TARGET_LIBRARIES}"
#define C_TARGET_CC "${TARGET_C_COMPILER}"

...

echo "#ifndef C_TARGET_CXX" >>chicken-config.h
echo "# define C_TARGET_CXX "$(TARGET_CXX_COMPILER)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_RC_COMPILER" >>chicken-config.h
echo "# define C_TARGET_RC_COMPILER "$(TARGET_RC_COMPILER)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_CFLAGS" >>chicken-config.h
echo "# define C_TARGET_CFLAGS "$(TARGET_C_COMPILER_OPTIONS) $(TARGET_C_COMPILER_OPTIMIZATION_OPTIONS)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_LDFLAGS" >>chicken-config.h
echo "# define C_TARGET_LDFLAGS "$(TARGET_LINKER_OPTIONS) $(TARGET_LINKER_OPTIMIZATION_OPTIONS)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_FEATURES" >>chicken-config.h
echo "# define C_TARGET_FEATURES "$(TARGET_FEATURES)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CROSS_CHICKEN" >>chicken-config.h
echo "# define C_CROSS_CHICKEN $(CROSS_CHICKEN)" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_PREFIX" >>chicken-config.h
echo "# define C_TARGET_PREFIX "$(TARGET_PREFIX)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_BIN_HOME" >>chicken-config.h
echo "# define C_TARGET_BIN_HOME "$(TARGET_PREFIX)/bin"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_LIB_HOME" >>chicken-config.h
echo "# define C_TARGET_LIB_HOME "$(TARGET_PREFIX)/lib"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_LIB_NAME" >>chicken-config.h
echo "# define C_TARGET_LIB_NAME "$(TARGET_LIB_NAME)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_RUN_LIB_HOME" >>chicken-config.h
ifdef DLLSINPATH >>chicken-config.h
echo "# define C_TARGET_RUN_LIB_HOME "$(TARGET_RUN_PREFIX)/bin"" >>chicken-config.h
else >>chicken-config.h
echo "# define C_TARGET_RUN_LIB_HOME "$(TARGET_RUN_PREFIX)/lib"" >>chicken-config.h
endif >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_SHARE_HOME" >>chicken-config.h
echo "# define C_TARGET_SHARE_HOME "$(TARGET_PREFIX)/share"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_INCLUDE_HOME" >>chicken-config.h
echo "# define C_TARGET_INCLUDE_HOME "$(TARGET_PREFIX)/include/chicken"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_TARGET_STATIC_LIB_HOME" >>chicken-config.h
echo "# define C_TARGET_STATIC_LIB_HOME "$(TARGET_PREFIX)/lib"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_PROGRAM "$(CHICKEN_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CSC_PROGRAM" >>chicken-config.h
echo "# define C_CSC_PROGRAM "$(CSC_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CSI_PROGRAM" >>chicken-config.h
echo "# define C_CSI_PROGRAM "$(CSI_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_BUG_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_BUG_PROGRAM "$(CHICKEN_BUG_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_DO_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_DO_PROGRAM "$(CHICKEN_DO_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_INSTALL_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_INSTALL_PROGRAM "$(CHICKEN_INSTALL_PROGRAM)")
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_UNINSTALL_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_UNINSTALL_PROGRAM "$(CHICKEN_UNINSTALL_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_CHICKEN_STATUS_PROGRAM" >>chicken-config.h
echo "# define C_CHICKEN_STATUS_PROGRAM "$(CHICKEN_STATUS_PROGRAM)"" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_WINDOWS_SHELL" >>chicken-config.h
ifdef WINDOWS_SHELL >>chicken-config.h
echo "# define C_WINDOWS_SHELL 1" >>chicken-config.h
else >>chicken-config.h
echo "# define C_WINDOWS_SHELL 0" >>chicken-config.h
endif >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_BINARY_VERSION" >>chicken-config.h
echo "# define C_BINARY_VERSION $(BINARYVERSION)" >>chicken-config.h
echo "#endif" >>chicken-config.h
echo "#ifndef C_USES_SONAME" >>chicken-config.h
ifdef USES_SONAME >>chicken-config.h
echo "# define C_USES_SONAME 1" >>chicken-config.h
else
echo "# define C_USES_SONAME 0" >>chicken-config.h
endif
echo "#endif)
/* END OF FILE */" >>chicken-config.h

if test ! -a chicken-do; then
    ${CC} ${SRCDIR}/chicken-do.c -o chicken-do -I.
fi
